name: Run PHPUnit Tests

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Agregar comando para listar el contenido del directorio local antes del deploy
      - name: List local files before deploy
        run: ls -R ./

      - name: Install FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: files.000webhost.com
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /public_html/
          log-level: verbose
          exclude: |
            **/.git*
            **/.git*/**
            node_modules/**
            **/node_modules/**
          before-deploy: |
            # Eliminar archivos y directorios en el servidor remoto excepto .htaccess
            lftp -e "set net:timeout 10; open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER; \
            mirror --reverse --delete --exclude .htaccess ./ /public_html/" -p 22

      # Agregar comando para listar el contenido del directorio local despu√©s del deploy
      - name: List local files after deploy
        run: ls -R ./
  run_phpunit_tests:
    name: Run PHPUnit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-
          
      - name: Setup PHP with required extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: imagick, swoole
    
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install PHPUnit
        run: composer require --dev phpunit/phpunit

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit tests
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-20.04
    needs: run_phpunit_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}